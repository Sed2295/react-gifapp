{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","console","log","type","value","onChange","target","getGifs","category","a","url","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","div","document","getElementById","ReactDOM","render"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACrCC,EADqC,KAC1BC,EAD0B,KAe5C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,IACdO,QAAQC,IAAI,kBAMhB,UACI,qDACA,uBAAOC,KAAK,OAAOC,MAAOX,EAAYY,SAhBpB,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,c,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kGACoFF,GADpF,SAEDG,MAAMD,GAFL,cAEbE,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAG,UAACO,EAAIG,cAAL,aAAC,EAAYC,iBAAiBX,QARtB,kBAWZK,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAElC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OAVAC,qBAAW,WACPvB,EAAQC,GACHuB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAItB,CAACnB,IACIoB,EDVuBK,CAAazB,GAA/BY,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAGnB,OAFA1B,QAAQC,IAAIkB,EAAOO,GAGf,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDf,IAClDmB,EAAU,cAAgB,GAC3B,qBAAKJ,UAAU,YAAf,SAYQH,EAAOJ,KAAI,SAAAC,GACH,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aE3B5BgB,EAAe,WAAM,MAEK1C,mBAAS,CAAC,cAFf,mBAEvB2C,EAFuB,KAEZ5C,EAFY,KAY9B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAOS4C,EAAWnB,KAAI,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCxBvB4B,EAAMC,SAASC,eAAe,QACpCC,IAASC,OAAO,cAAC,EAAD,IAAgBJ,K","file":"static/js/main.b666d25e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue,setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const HandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias(cate => [inputValue,...cate]);\r\n            setInputValue('');\r\n            console.log('Submit Hecho');\r\n        }\r\n        \r\n        \r\n    }\r\n    return(    \r\n        <form onSubmit={HandleSubmit}>\r\n            <h2>AÃ±adir categoria</h2>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>        \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias:PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=8FZIHm9CO4uo4ARK5lflU4CY9kUTr2Pv&limit=10&q=${category}`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n           {/*  {img.title} */}\r\n        </div>\r\n   )\r\n}","import {React} from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import {React, useState, useEffect} from 'react';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => { \r\n    //const [images,setImages] = useState([]);\r\n    //con dos puntos renombramos\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    console.log(images,loading);\r\n       \r\n    return(\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading ? 'Cragando...' : ''}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        \r\n                    //     sin destructuracion\r\n                    //     images.map(img => {\r\n                    //         return <li key={img.id}>{img.title}</li>\r\n                    //     }) \r\n                    //     con destructuracion \r\n                        \r\n                    //  images.map(({id,title}) => {\r\n                    //         return <li key={id}>{title}</li>\r\n                    // }) \r\n                    images.map(img => {\r\n                            return <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        })\r\n                    }   \r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","//use significa que es un hook en el nombre del archivo\r\nimport { useState,useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n                             \r\n            })\r\n    },[category])\r\n    return state;\r\n}","import {React,useState} from 'react';\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\nexport const GifExpertApp = () => {\r\n    //const categorias = ['One Punch','Samurai X','Dragon Ball'];\r\n    const [categorias,setCategorias] = useState(['One Punch'])\r\n    //const handleAdd = () => {\r\n        //Modo 1\r\n        //setcategorias sirve para cxambiar el estado del hook\r\n        //setCategorias([...categorias,'Naruto']);\r\n        //Al inicio\r\n        //setCategorias(['Naruto',...categorias]);\r\n        //Modo 2\r\n        //setCategorias(cate => [...cate,'Naruto']);\r\n    //}\r\n    return(\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias}/>\r\n        <hr></hr>\r\n        <ol>\r\n            {\r\n                //codigo inicial  \r\n               /* categorias.map(category => {\r\n                    return <li key={category}>{category}</li>\r\n                })  */\r\n                //Modificacion de codigo \r\n                 categorias.map(category => (\r\n                    <GifGrid\r\n                        key={category} \r\n                        category={category}\r\n                    />\r\n                 ))\r\n            }\r\n        </ol>\r\n      </>\r\n    )\r\n}\r\n//el export de abajo no sirve con la destructuracion\r\n//export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nconst div = document.getElementById('root');\nReactDOM.render(<GifExpertApp/>,div);"],"sourceRoot":""}